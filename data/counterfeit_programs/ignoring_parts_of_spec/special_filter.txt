# Prompt 1: Test generation without any further help

Consider this Python function:

def specialFilter(nums):
    """Write a function that takes an array of numbers as input and returns
    the number of elements in the array that are greater than 10 and both
    first and last digits of a number are odd (1, 3, 5, 7, 9).
    For example:
    specialFilter([15, -73, 14, -15]) => 1
    specialFilter([33, -2, -3, 45, 21, 109]) => 2
    """
    
    # Define a function that checks if the first and last digit of a number is odd
    def isSpecial(n):
        if n < 0: n = -n # make sure n is positive
        return n % 10 in [1, 3, 5, 7, 9] and n//10 % 10 in [1, 3, 5, 7, 9]
    
    # Use a list comprehension to filter the numbers and count the results
    return sum(1 for num in nums if num > 10 and isSpecial(num))

Provide a test case for the function, by completing this code snippet:

def test_special_filter():
  ...

# Predicted test:

def test_special_filter():
    # Define test inputs and expected outputs
    test_cases = [
        {
            "input": [15, -73, 14, -15],
            "expected": 1
        },
        {
            "input": [33, -2, -3, 45, 21, 109],
            "expected": 2
        },
        {
            "input": [135, 35, 111, 9],
            "expected": 3
        },
        {
            "input": [25, 39, 81, 92],
            "expected": 0
        },
        {
            "input": [12345, 6789, 1111, 98765],
            "expected": 1
        }
    ]

    # Iterate through the test cases
    for case in test_cases:
        nums = case["input"]
        expected = case["expected"]

        # Call the function and get the result
        result = specialFilter(nums)

        # Assert the result against the expected output
        assert result == expected, f"Failed for input {nums}: expected {expected}, got {result}"

    print("All test cases pass")


--> Finds a bug without any further help